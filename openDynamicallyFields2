
🔁 Example with useFieldArray (better practice):


import { useForm, useFieldArray, Controller } from "react-hook-form";

const Add_Specification = () => {
  const { control, handleSubmit, register } = useForm({
    defaultValues: {
      specifications: [{ name: "", value: "" }],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control,
    name: "specifications",
  });

  const onSubmit = (data) => {
    console.log(data);
  };

  return (
    <Form onSubmit={handleSubmit(onSubmit)}>
      <Table>
        <thead>
          <tr>
            <th>Specification Name</th>
            <th>Value</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {fields.map((item, index) => (
            <tr key={item.id}>
              <td>
                <Controller
                  control={control}
                  name={`specifications[${index}].name`}
                  rules={{ required: "Name required" }}
                  render={({ field }) => <Input {...field} />}
                />
              </td>
              <td>
                <Controller
                  control={control}
                  name={`specifications[${index}].value`}
                  rules={{ required: "Value required" }}
                  render={({ field }) => <Input {...field} />}
                />
              </td>
              <td>
                <Trash2 onClick={() => remove(index)} />
              </td>
            </tr>
          ))}
        </tbody>
      </Table>
      <Button type="button" onClick={() => append({ name: "", value: "" })}>
        <PlusCircle />
      </Button>
      <Button type="submit">Submit</Button>
    </Form>
  );
};
